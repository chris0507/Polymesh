version: 2
jobs:
  lint:
    docker:
      - image: polymathnet/rust:debian-nightly-2021-01-25
    environment:
      VERBOSE: "1"
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "a1:99:47:ca:fa:32:4c:9d:4b:b8:50:99:c7:64:e3:80"
      - run:
          name: Check formatting
          command: ./scripts/rustfmt.sh
  build:
    docker:
      - image: polymathnet/rust:debian-nightly-2021-01-25
    environment:
      - VERBOSE: "1"
      - RUSTFLAGS: -D warnings
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "b3:bb:01:c5:90:77:ef:5c:e6:5b:f2:db:16:2f:e8:61"
            - "a1:99:47:ca:fa:32:4c:9d:4b:b8:50:99:c7:64:e3:80"
      - run:
          name: Store rust version in an environment var for cache key
          command: rustc --version > rust.version
      - restore_cache:
          keys:
            - v4-release-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
            - v4-release-cache-{{ checksum "./rust.version" }}
      - run:
          name: Build release
          command: cargo build --release || cargo build -j 1 --release
          no_output_timeout: 4h
      - save_cache:
          key: v4-release-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
          paths:
            - "~/.cargo"
            - "./target"
  benchmark:
    docker:
      - image: polymathnet/rust:debian-nightly-2021-01-25
    environment:
      - VERBOSE: "1"
      - RUSTFLAGS: -D warnings
    steps:
      - checkout
      - run:
          name: Store rust version in an environment var for cache key
          command: rustc --version > rust.version
      - restore_cache:
          keys:
            - v1-bb-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
      - run:
          name: Build binary with runtime-benchmarks
          command: cargo build --release --features=runtime-benchmarks,running-ci || cargo build --release -j 1 --features=runtime-benchmarks,running-ci
          no_output_timeout: 30m
      - run:
          name: Run benchmarks
          command: ./target/release/polymesh benchmark -p=* -e=* -r 1 -s 1 --execution native --db-cache 512 --heap-pages=2048
          no_output_timeout: 2h
      - save_cache:
          key: v1-bb-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
          paths:
            - "~/.cargo"
            - "./target"
  test:
    docker:
      - image: polymathnet/rust:debian-nightly-2021-01-25
    environment:
      - VERBOSE: "1"
      - RUSTFLAGS: -D warnings
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "b3:bb:01:c5:90:77:ef:5c:e6:5b:f2:db:16:2f:e8:61"
            - "a1:99:47:ca:fa:32:4c:9d:4b:b8:50:99:c7:64:e3:80"
      - run:
          name: Store rust version in a file for cache key
          command: rustc --version > rust.version
      - restore_cache:
          keys:
            - v11-test-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
      - run:
          name: Tests
          command: >-
            cargo test
            --package polymesh-runtime-tests
            --package pallet-staking
            --package pallet-group
            --package pallet-sudo
            --package polymesh-primitives
            --package node-rpc-runtime-api
            --package pallet-transaction-payment
            --package polymesh-runtime-tests
            --features default_identity ||
            cargo test -j 1
            --package polymesh-runtime-tests
            --package pallet-staking
            --package pallet-group
            --package pallet-sudo
            --package polymesh-primitives
            --package node-rpc-runtime-api
            --package pallet-transaction-payment
            --package polymesh-runtime-tests
            --features default_identity
          no_output_timeout: 30m
      - save_cache:
          key: v11-test-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
          paths:
            - "~/.cargo"
            - "./target"
  coverage:
    docker:
      - image: polymathnet/rust:debian-nightly-2021-01-25
    environment:
      - VERBOSE: "1"
      - RUSTFLAGS: -D warnings
    steps:
      - checkout
      - run:
          name: Store rust version in a file for cache key
          command: rustc --version > rust.version
      - restore_cache:
          keys:
            - v3-coverage-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
      - run:
          name: Install dependencies
          command: rustup component add llvm-tools-preview && cargo install rustfilt cargo-binutils
      - run:
          name: Coverage
          command: bash ./scripts/coverage.sh
          no_output_timeout: 1h
      - save_cache:
          key: v3-coverage-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
          paths:
            - "~/.cargo"
            - "./target"
  cli:
    docker:
      - image: polymathnet/rust:debian-nightly-2021-01-25
    environment:
      VERBOSE: "1"
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "b3:bb:01:c5:90:77:ef:5c:e6:5b:f2:db:16:2f:e8:61"
            - "a1:99:47:ca:fa:32:4c:9d:4b:b8:50:99:c7:64:e3:80"
      - run:
          name: Store rust version in a file for cache key
          command: rustc --version > rust.version
      - restore_cache:
          keys:
            - v6-cli-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
      - run:
          name: Build release
          command: cargo build --release || cargo build -j 1 --release
          no_output_timeout: 4h
      - run:
          name: cli node instance
          command: ./target/release/polymesh --dev --pool-limit 100000 -d /tmp/pmesh-primary-node
          background: true
      - run:
          name: cli scripts install
          command: npm install
          working_directory: ./scripts/cli
          no_output_timeout: 30m
      - run:
          name: cli scripts test
          command: npm test
          working_directory: ./scripts/cli
          no_output_timeout: 10m
      - save_cache:
          key: v6-cli-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
          paths:
            - "~/.cargo"
            - "./target"
            - "./scripts/cli/node_modules"
  clippy:
    docker:
      - image: polymathnet/rust:debian-nightly-2021-01-25
    environment:
      VERBOSE: "1"
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "b3:bb:01:c5:90:77:ef:5c:e6:5b:f2:db:16:2f:e8:61"
            - "a1:99:47:ca:fa:32:4c:9d:4b:b8:50:99:c7:64:e3:80"
      - run:
          name: Store rust version in a file for cache key
          command: rustc --version > rust.version
      - restore_cache:
          keys:
            - v4-clippy-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
            - v4-clippy-cache-{{ checksum "./rust.version" }}
      - run:
          name: run clippy
          command: cargo clippy -j 1
          no_output_timeout: 60m
      - save_cache:
          key: v4-clippy-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
          paths:
            - "~/.cargo"
            - "./target"
workflows:
  version: 2
  commit:
    jobs:
      - lint
      - coverage
      - benchmark
