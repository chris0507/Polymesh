version: 2
jobs:
  lint:
    docker:
      - image: maxsam4/rust
    environment:
      VERBOSE: "1"
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "a1:99:47:ca:fa:32:4c:9d:4b:b8:50:99:c7:64:e3:80"
      - run:
          name: Pull submodules
          command: >-
            GIT_SSH_COMMAND="ssh -i /root/.ssh/id_rsa_a19947cafa324c9d4bb85099c764e380" git submodule update --init pallets/settlement &&
            git submodule update --init external/cryptography
      - run:
          name: Check formatting
          command: ./scripts/rustfmt.sh
  build:
    docker:
      - image: maxsam4/rust
    environment:
      VERBOSE: "1"
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "b3:bb:01:c5:90:77:ef:5c:e6:5b:f2:db:16:2f:e8:61"
            - "a1:99:47:ca:fa:32:4c:9d:4b:b8:50:99:c7:64:e3:80"
      - run:
          name: Store rust version in an environment var for cache key
          command: rustc --version > rust.version
      - restore_cache:
          keys:
            - v3-release-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
            - v3-release-cache-{{ checksum "./rust.version" }}
      - run:
          name: Pull submodules
          command: >-
            GIT_SSH_COMMAND="ssh -i /root/.ssh/id_rsa_a19947cafa324c9d4bb85099c764e380" git submodule update --init pallets/settlement &&
            GIT_SSH_COMMAND="ssh -i /root/.ssh/id_rsa_b3bb01c59077ef5ce65bf2db162fe861" git submodule update --init external/cryptography
      - run:
          name: Build release
          command: cargo +nightly build --release || cargo +nightly build -j 1 --release
          no_output_timeout: 4h
      - save_cache:
          key: v3-release-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
          paths:
            - "~/.cargo"
            - "./target"
  test:
    docker:
      - image: maxsam4/rust
    environment:
      VERBOSE: "1"
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "b3:bb:01:c5:90:77:ef:5c:e6:5b:f2:db:16:2f:e8:61"
            - "a1:99:47:ca:fa:32:4c:9d:4b:b8:50:99:c7:64:e3:80"
      - run:
          name: Store rust version in a file for cache key
          command: rustc --version > rust.version
      - restore_cache:
          keys:
            - v9-test-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
            - v9-test-cache-{{ checksum "./rust.version" }}
      - run:
          name: Pull submodules
          command: >-
            GIT_SSH_COMMAND="ssh -i /root/.ssh/id_rsa_a19947cafa324c9d4bb85099c764e380" git submodule update --init pallets/settlement &&
            GIT_SSH_COMMAND="ssh -i /root/.ssh/id_rsa_b3bb01c59077ef5ce65bf2db162fe861" git submodule update --init external/cryptography
      - run:
          name: Tests
          command: >-
            cargo +nightly test
            --package polymesh-runtime-tests
            --package pallet-staking
            --package pallet-group
            --package polymesh-primitives
            --package node-rpc-runtime-api
            --package pallet-transaction-payment
            --package polymesh-runtime-tests
            --features default_identity ||
            cargo +nightly test -j 1
            --package polymesh-runtime-tests
            --package pallet-staking
            --package pallet-group
            --package polymesh-primitives
            --package node-rpc-runtime-api
            --package pallet-transaction-payment
            --package polymesh-runtime-tests
            --features default_identity
          no_output_timeout: 30m
      - save_cache:
          key: v9-test-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
          paths:
            - "~/.cargo"
            - "./target"
  cli:
    docker:
      - image: maxsam4/rust
    environment:
      VERBOSE: "1"
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "b3:bb:01:c5:90:77:ef:5c:e6:5b:f2:db:16:2f:e8:61"
            - "a1:99:47:ca:fa:32:4c:9d:4b:b8:50:99:c7:64:e3:80"
      - run:
          name: Store rust version in a file for cache key
          command: rustc --version > rust.version
      - restore_cache:
          keys:
            - v6-cli-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
      - run:
          name: Pull submodules
          command: >-
            GIT_SSH_COMMAND="ssh -i /root/.ssh/id_rsa_a19947cafa324c9d4bb85099c764e380" git submodule update --init pallets/settlement &&
            GIT_SSH_COMMAND="ssh -i /root/.ssh/id_rsa_b3bb01c59077ef5ce65bf2db162fe861" git submodule update --init external/cryptography
      - run:
          name: Build release
          command: cargo +nightly build --release || cargo +nightly build -j 1 --release
          no_output_timeout: 4h
      - run:
          name: cli node instance
          command: ./target/release/polymesh --dev --pool-limit 100000 -d /tmp/pmesh-primary-node
          background: true
      - run:
          name: cli scripts install
          command: npm install
          working_directory: ./scripts/cli
          no_output_timeout: 30m
      - run:
          name: cli scripts test
          command: npm test
          working_directory: ./scripts/cli
          no_output_timeout: 10m
      - save_cache:
          key: v6-cli-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
          paths:
            - "~/.cargo"
            - "./target"
            - "./scripts/cli/node_modules"
  clippy:
    docker:
      - image: maxsam4/rust
    environment:
      VERBOSE: "1"
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "b3:bb:01:c5:90:77:ef:5c:e6:5b:f2:db:16:2f:e8:61"
            - "a1:99:47:ca:fa:32:4c:9d:4b:b8:50:99:c7:64:e3:80"
      - run:
          name: Store rust version in a file for cache key
          command: rustc +nightly --version > rust.version
      - restore_cache:
          keys:
            - v4-clippy-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
            - v4-clippy-cache-{{ checksum "./rust.version" }}
      - run:
          name: Pull submodules
          command: >-
            GIT_SSH_COMMAND="ssh -i /root/.ssh/id_rsa_a19947cafa324c9d4bb85099c764e380" git submodule update --init pallets/settlement &&
            GIT_SSH_COMMAND="ssh -i /root/.ssh/id_rsa_b3bb01c59077ef5ce65bf2db162fe861" git submodule update --init external/cryptography
      - run:
          name: run clippy
          command: cargo +nightly clippy -j 1
          no_output_timeout: 60m
      - save_cache:
          key: v4-clippy-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
          paths:
            - "~/.cargo"
            - "./target"
workflows:
  version: 2
  commit:
    jobs:
      - lint
      - test
  daily-builds:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build
